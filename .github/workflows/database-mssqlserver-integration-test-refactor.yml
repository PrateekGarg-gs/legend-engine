# Copyright 2020 FINOS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Refactor Database MSSQLServer Integration Tests

env:
  CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
  CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      dummyInput:
        description: 'Test scenario Input'  
  schedule:
    - cron: '0 0 * * 2' # every Tuesday on default/base branch
  push:
    branches:
      - master
      - refactor_integration_tests
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: CI_DEPLOY_USERNAME
          server-password: CI_DEPLOY_PASSWORD
      - name: Configure git
        run: |
          git config --global committer.email "infra@finos.org"
          git config --global committer.name "FINOS Admin"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Print out mvn version
        run: mvn -v
      - name: Download deps and plugins
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Build
        run: |
          mvn install
      - name : Run Connection Protocol Integration Tests
        run :
          mvn -P run-redshift-integration -pl legend-engine-executionPlan-execution-store-relational-connection-tests  -Dtest="ExternalIntegration*SqlServer*" test
      - name : Run Sql Generation Tests
        run :
          mvn -P run-redshift-integration -pl legend-engine-server -Dtest="Test_Relational_DbSpecific_SqlServer_UsingPureClientTestSuite" test
      - name: Test Reports - SQL Generation
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JUNIT Tests            # Name of the check run which will be created
          path: 'legend-engine*/target/surefire-reports*/*.xml, legend-engine*/surefire-reports*/*.xml'    # Path to test results
          reporter: java-junit        # Format of test results
      - name: Test Reports - All
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JUNIT Tests            # Name of the check run which will be created
          path: legend-engine-test-reports/surefire-reports-aggregate/*.xml   # Path to test results
          reporter: java-junit        # Format of test results
